{"version":3,"file":"lottie-interactivity.es.js","sources":["../src/main.js"],"sourcesContent":["const DEFAULT_OPTIONS = {\n  player: 'lottie-player',\n};\nconst LOTTIE_PLAYER_NODE = 'LOTTIE-PLAYER';\nconst ERROR_PREFIX = '[lottieInteractivity]:';\n\n/**\n * LottieFiles interactivity for Lottie\n */\nexport class LottieInteractivity {\n  constructor({ actions, container, mode, player, ...options } = DEFAULT_OPTIONS) {\n    // Resolve lottie instance specified in player option\n    if (!(typeof player === 'object' && player.constructor.name === 'AnimationItem')) {\n      if (typeof player === 'string') {\n        const elem = document.querySelector(player);\n\n        if (elem && elem.nodeName === LOTTIE_PLAYER_NODE) {\n          player = elem.getLottie();\n        }\n      } else if (player instanceof HTMLElement && player.nodeName === LOTTIE_PLAYER_NODE) {\n        player = player.getLottie();\n      }\n\n      // Throw error no player instance has been successfully resolved\n      if (!player) {\n        throw new Error(`${ERROR_PREFIX} Specified player is invalid.`, player);\n      }\n    }\n\n    // Get the configured container element.\n    if (typeof container === 'string') {\n      container = document.querySelector(container);\n    }\n\n    // Use player wrapper as fallback if container couldn't be resolved.\n    if (!container) {\n      container = player.wrapper;\n    }\n\n    this.player = player;\n    this.container = container;\n    this.mode = mode;\n    this.actions = actions;\n    this.options = options;\n  }\n\n  start() {\n    if (this.mode === 'scroll') {\n      window.addEventListener('scroll', this.#scrollHandler);\n    }\n\n    if (this.mode === 'hover') {\n      this.player.goToAndStop(Math.min(...this.actions.frames));\n      this.player.loop = true;\n      this.container.addEventListener('mouseenter', this.#hoverStartHandler);\n      this.container.addEventListener('mouseleave', this.#hoverEndHandler);\n    }\n  }\n\n  stop() {\n    if (this.mode === 'scroll') {\n      window.removeEventListener('scroll', this.#scrollHandler);\n    }\n\n    if (this.mode === 'hover') {\n      this.container.removeEventListener('mouseenter', this.#hoverStartHandler);\n      this.container.removeEventListener('mouseleave', this.#hoverEndHandler);\n    }\n  }\n\n  #hoverStartHandler = () => {\n    if (this.actions.type === 'loop') {\n      if (this.player.isPaused === true) {\n        this.player.playSegments(this.actions.frames, true);\n      }\n    }\n  };\n\n  #hoverEndHandler = () => {\n    if (this.actions.type === 'loop') {\n      this.player.stop();\n    }\n  };\n\n  #scrollHandler = () => {\n    // Get the bounding box for the lottie player or container\n    const { top, height } = this.container.getBoundingClientRect();\n\n    // Calculate current view percentage\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    const currentPercent = current / max;\n\n    // // Skip if out of viewport\n    if (currentPercent < 0 || currentPercent > 1) {\n      return;\n    }\n\n    // Find the first action that satisfies the current position conditions\n    const action = this.actions.find(({ start, end }) => currentPercent >= start && currentPercent <= end);\n\n    // Skip if no matching action was found!\n    if (!action) {\n      return;\n    }\n\n    // Get lottie instance\n    this.player.loop = true;\n\n    // Process action types:\n    if (action.type === 'seek') {\n      // Seek: Go to a frame based on player scroll position action\n      this.player.playSegments(action.frames, true);\n      this.player.goToAndStop(\n        Math.ceil(((currentPercent - action.start) / (action.end - action.start)) * this.player.totalFrames),\n        true,\n      );\n    } else if (action.type === 'loop') {\n      // Loop: Loop a given frames\n      if (this.player.isPaused === true) {\n        this.player.playSegments(action.frames, true);\n      }\n    } else if (action.type === 'play') {\n      // Play: Reset segments and continue playing full animation from current position\n      if (this.player.isPaused === true) {\n        this.player.resetSegments();\n      }\n      this.player.play();\n    } else if (action.type === 'stop') {\n      // Stop: Stop playback\n      this.player.goToAndStop(action.frames[0]);\n      this.player.stop();\n      // TODO: This is not the way to implement this. Refactor needed!\n    }\n  };\n}\n\nexport const create = options => {\n  const instance = new LottieInteractivity(options);\n  instance.start();\n\n  return instance;\n};\n\nexport default create;\n"],"names":["DEFAULT_OPTIONS","player","LottieInteractivity","actions","container","mode","options","_this","type","isPaused","playSegments","frames","stop","getBoundingClientRect","top","height","currentPercent","window","innerHeight","action","find","start","end","loop","goToAndStop","Math","ceil","totalFrames","resetSegments","play","_typeof","constructor","name","elem","document","querySelector","nodeName","getLottie","HTMLElement","Error","wrapper","this","addEventListener","min","removeEventListener","create","instance"],"mappings":"qtDAAA,IAAMA,EAAkB,CACtBC,OAAQ,iBAQGC,8FACoDF,EAAjDG,IAAAA,QAASC,IAAAA,UAAWC,IAAAA,KAAMJ,IAAAA,OAAWK,0FA4D9B,WACO,SAAtBC,EAAKJ,QAAQK,OACc,IAAzBD,EAAKN,OAAOQ,UACdF,EAAKN,OAAOS,aAAaH,EAAKJ,QAAQQ,QAAQ,oCAKjC,WACS,SAAtBJ,EAAKJ,QAAQK,MACfD,EAAKN,OAAOW,wCAIC,iBAESL,EAAKH,UAAUS,wBAA/BC,IAAAA,IAAKC,IAAAA,OAKPC,GAFUC,OAAOC,YAAcJ,IACzBG,OAAOC,YAAcH,QAI7BC,EAAiB,GAAKA,EAAiB,QAKrCG,EAASZ,EAAKJ,QAAQiB,MAAK,gBAAGC,IAAAA,MAAOC,IAAAA,WAAUN,GAAkBK,GAASL,GAAkBM,KAG7FH,IAKLZ,EAAKN,OAAOsB,MAAO,EAGC,SAAhBJ,EAAOX,MAETD,EAAKN,OAAOS,aAAaS,EAAOR,QAAQ,GACxCJ,EAAKN,OAAOuB,YACVC,KAAKC,MAAOV,EAAiBG,EAAOE,QAAUF,EAAOG,IAAMH,EAAOE,OAAUd,EAAKN,OAAO0B,cACxF,IAEuB,SAAhBR,EAAOX,MAEa,IAAzBD,EAAKN,OAAOQ,UACdF,EAAKN,OAAOS,aAAaS,EAAOR,QAAQ,GAEjB,SAAhBQ,EAAOX,OAEa,IAAzBD,EAAKN,OAAOQ,UACdF,EAAKN,OAAO2B,gBAEdrB,EAAKN,OAAO4B,QACa,SAAhBV,EAAOX,OAEhBD,EAAKN,OAAOuB,YAAYL,EAAOR,OAAO,IACtCJ,EAAKN,OAAOW,aAvHU,WAAlBkB,EAAO7B,IAAmD,kBAA5BA,EAAO8B,YAAYC,KAA2B,IAC1D,iBAAX/B,EAAqB,KACxBgC,EAAOC,SAASC,cAAclC,GAEhCgC,GAbe,kBAaPA,EAAKG,WACfnC,EAASgC,EAAKI,kBAEPpC,aAAkBqC,aAhBR,kBAgBuBrC,EAAOmC,WACjDnC,EAASA,EAAOoC,iBAIbpC,QACG,IAAIsC,gBArBG,0DAqBmDtC,GAK3C,iBAAdG,IACTA,EAAY8B,SAASC,cAAc/B,IAIhCA,IACHA,EAAYH,EAAOuC,cAGhBvC,OAASA,OACTG,UAAYA,OACZC,KAAOA,OACPF,QAAUA,OACVG,QAAUA,yDAIG,WAAdmC,KAAKpC,MACPY,OAAOyB,iBAAiB,WAAUD,SAGlB,UAAdA,KAAKpC,YACFJ,OAAOuB,YAAYC,KAAKkB,UAALlB,OAAYgB,KAAKtC,QAAQQ,eAC5CV,OAAOsB,MAAO,OACdnB,UAAUsC,iBAAiB,eAAcD,cACzCrC,UAAUsC,iBAAiB,eAAcD,yCAK9B,WAAdA,KAAKpC,MACPY,OAAO2B,oBAAoB,WAAUH,SAGrB,UAAdA,KAAKpC,YACFD,UAAUwC,oBAAoB,eAAcH,cAC5CrC,UAAUwC,oBAAoB,eAAcH,yFAuE1CI,EAAS,SAAAvC,OACdwC,EAAW,IAAI5C,EAAoBI,UACzCwC,EAASzB,QAEFyB"}