{"version":3,"file":"lottie-interactivity.min.js","sources":["../src/main.js"],"sourcesContent":["const DEFAULT_OPTIONS = {\n  player: 'lottie-player',\n};\nconst LOTTIE_PLAYER_NODE = 'LOTTIE-PLAYER';\nconst ERROR_PREFIX = '[lottieInteractivity]:';\n\n/**\n * LottieFiles interactivity for Lottie\n */\nexport class LottieInteractivity {\n  constructor({ actions, container, mode, player, ...options } = DEFAULT_OPTIONS) {\n    // Resolve lottie instance specified in player option\n    if (!(typeof player === 'object' && player.constructor.name === 'AnimationItem')) {\n      if (typeof player === 'string') {\n        const elem = document.querySelector(player);\n\n        if (elem && elem.nodeName === LOTTIE_PLAYER_NODE) {\n          player = elem.getLottie();\n        }\n      } else if (player instanceof HTMLElement && player.nodeName === LOTTIE_PLAYER_NODE) {\n        player = player.getLottie();\n      }\n\n      // Throw error no player instance has been successfully resolved\n      if (!player) {\n        throw new Error(`${ERROR_PREFIX} Specified player is invalid.`, player);\n      }\n    }\n\n    // Get the configured container element.\n    if (typeof container === 'string') {\n      container = document.querySelector(container);\n    }\n\n    // Use player wrapper as fallback if container couldn't be resolved.\n    if (!container) {\n      container = player.wrapper;\n    }\n\n    this.player = player;\n    this.container = container;\n    this.mode = mode;\n    this.actions = actions;\n    this.options = options;\n  }\n\n  boundingBoxUtils() {\n    // Get the bounding box for the lottie player or container\n    const { top, height } = this.container.getBoundingClientRect();\n\n    // Calculate current view percentage\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    const currentPercent = current / max;\n\n    // Find the first action that satisfies the current position conditions\n    const action = this.actions.find(({ start, end }) => currentPercent >= start && currentPercent <= end);\n\n    return { currentPercent, action };\n  }\n\n  start() {\n    if (this.mode === 'scroll') {\n      window.addEventListener('scroll', this.#scrollHandler);\n    }\n\n    if (this.mode === 'hover') {\n      this.container.addEventListener('mouseenter', this.#hoverStartHandler);\n      this.container.addEventListener('mouseleave', this.#hoverEndHandler);\n    }\n  }\n\n  stop() {\n    if (this.mode === 'scroll') {\n      window.removeEventListener('scroll', this.#scrollHandler);\n    }\n\n    if (this.mode === 'hover') {\n      this.container.removeEventListener('mouseenter', this.#hoverStartHandler);\n      this.container.removeEventListener('mouseleave', this.#hoverEndHandler);\n    }\n  }\n\n  #hoverStartHandler = () => {\n    // Skip if no matching action was found!\n    const { currentPercent, action } = this.boundingBoxUtils();\n\n    // Skip if out of viewport\n    if (currentPercent < 0 || currentPercent > 1) {\n      return;\n    }\n    // Skip if no matching action was found!\n    if (!action) {\n      return;\n    }\n    if (action.type === 'loop') {\n      if (this.player.isPaused === true) {\n        this.player.playSegments(action.frames, true);\n      }\n    } else if (action.type === 'play') {\n      // Play: Reset segments and continue playing full animation from current position\n      if (this.player.isPaused === true) {\n        this.player.resetSegments();\n      }\n      this.player.playSegments(action.frames);\n    } else if (action.type === 'stop') {\n      // Stop: Stop playback\n      this.player.goToAndStop(action.frames[0]);\n      this.player.stop();\n    }\n  };\n\n  #hoverEndHandler = () => {\n    // Skip if no matching action was found!\n    const { currentPercent, action } = this.boundingBoxUtils();\n\n    // Skip if out of viewport\n    if (currentPercent < 0 || currentPercent > 1) {\n      return;\n    }\n    // Skip if no matching action was found!\n    if (!action) {\n      return;\n    }\n    if (action.type === 'loop') {\n      this.player.stop();\n    } else if (action.type === 'play') {\n      this.player.stop();\n    } else if (action.type === 'stop') {\n      this.player.playSegments(action.frames, true);\n    }\n  };\n\n  #scrollHandler = () => {\n    const { currentPercent, action } = this.boundingBoxUtils();\n\n    // Skip if out of viewport\n    if (currentPercent < 0 || currentPercent > 1) {\n      return;\n    }\n    // Skip if no matching action was found!\n    if (!action) {\n      return;\n    }\n\n    // Get lottie instance\n    this.player.loop = true;\n\n    // Process action types:\n    if (action.type === 'seek') {\n      // Seek: Go to a frame based on player scroll position action\n      this.player.playSegments(action.frames, true);\n      this.player.goToAndStop(\n        Math.ceil(((currentPercent - action.start) / (action.end - action.start)) * this.player.totalFrames),\n        true,\n      );\n    } else if (action.type === 'loop') {\n      // Loop: Loop a given frames\n      if (this.player.isPaused === true) {\n        this.player.playSegments(action.frames, true);\n      }\n    } else if (action.type === 'play') {\n      // Play: Reset segments and continue playing full animation from current position\n      if (this.player.isPaused === true) {\n        this.player.resetSegments();\n      }\n      this.player.play();\n    } else if (action.type === 'stop') {\n      // Stop: Stop playback\n      this.player.goToAndStop(action.frames[0]);\n      this.player.stop();\n      // TODO: This is not the way to implement this. Refactor needed!\n    }\n  };\n}\n\nexport const create = options => {\n  const instance = new LottieInteractivity(options);\n  instance.start();\n\n  return instance;\n};\n\nexport default create;\n"],"names":["DEFAULT_OPTIONS","player","LottieInteractivity","actions","container","mode","options","_this","boundingBoxUtils","currentPercent","action","type","isPaused","playSegments","frames","resetSegments","goToAndStop","stop","loop","Math","ceil","start","end","totalFrames","play","_typeof","constructor","name","elem","document","querySelector","nodeName","getLottie","HTMLElement","Error","wrapper","this","getBoundingClientRect","top","height","window","innerHeight","find","addEventListener","removeEventListener","create","instance"],"mappings":"4rCAAA,IAAMA,EAAkB,CACtBC,OAAQ,iBAQGC,8FACoDF,EAAjDG,IAAAA,QAASC,IAAAA,UAAWC,IAAAA,KAAMJ,IAAAA,OAAWK,0FAyE9B,iBAEgBC,EAAKC,mBAAhCC,IAAAA,eAAgBC,IAAAA,OAGpBD,EAAiB,GAAKA,EAAiB,GAItCC,IAGe,SAAhBA,EAAOC,MACoB,IAAzBJ,EAAKN,OAAOW,UACdL,EAAKN,OAAOY,aAAaH,EAAOI,QAAQ,GAEjB,SAAhBJ,EAAOC,OAEa,IAAzBJ,EAAKN,OAAOW,UACdL,EAAKN,OAAOc,gBAEdR,EAAKN,OAAOY,aAAaH,EAAOI,SACP,SAAhBJ,EAAOC,OAEhBJ,EAAKN,OAAOe,YAAYN,EAAOI,OAAO,IACtCP,EAAKN,OAAOgB,0CAIG,iBAEkBV,EAAKC,mBAAhCC,IAAAA,eAAgBC,IAAAA,OAGpBD,EAAiB,GAAKA,EAAiB,GAItCC,IAGe,SAAhBA,EAAOC,MAEgB,SAAhBD,EAAOC,KADhBJ,EAAKN,OAAOgB,OAGa,SAAhBP,EAAOC,MAChBJ,EAAKN,OAAOY,aAAaH,EAAOI,QAAQ,qCAI3B,iBACoBP,EAAKC,mBAAhCC,IAAAA,eAAgBC,IAAAA,OAGpBD,EAAiB,GAAKA,EAAiB,GAItCC,IAKLH,EAAKN,OAAOiB,MAAO,EAGC,SAAhBR,EAAOC,MAETJ,EAAKN,OAAOY,aAAaH,EAAOI,QAAQ,GACxCP,EAAKN,OAAOe,YACVG,KAAKC,MAAOX,EAAiBC,EAAOW,QAAUX,EAAOY,IAAMZ,EAAOW,OAAUd,EAAKN,OAAOsB,cACxF,IAEuB,SAAhBb,EAAOC,MAEa,IAAzBJ,EAAKN,OAAOW,UACdL,EAAKN,OAAOY,aAAaH,EAAOI,QAAQ,GAEjB,SAAhBJ,EAAOC,OAEa,IAAzBJ,EAAKN,OAAOW,UACdL,EAAKN,OAAOc,gBAEdR,EAAKN,OAAOuB,QACa,SAAhBd,EAAOC,OAEhBJ,EAAKN,OAAOe,YAAYN,EAAOI,OAAO,IACtCP,EAAKN,OAAOgB,YA9JU,WAAlBQ,EAAOxB,IAAmD,kBAA5BA,EAAOyB,YAAYC,KAA2B,IAC1D,iBAAX1B,EAAqB,KACxB2B,EAAOC,SAASC,cAAc7B,GAEhC2B,GAbe,kBAaPA,EAAKG,WACf9B,EAAS2B,EAAKI,kBAEP/B,aAAkBgC,aAhBR,kBAgBuBhC,EAAO8B,WACjD9B,EAASA,EAAO+B,iBAIb/B,QACG,IAAIiC,gBArBG,0DAqBmDjC,GAK3C,iBAAdG,IACTA,EAAYyB,SAASC,cAAc1B,IAIhCA,IACHA,EAAYH,EAAOkC,cAGhBlC,OAASA,OACTG,UAAYA,OACZC,KAAOA,OACPF,QAAUA,OACVG,QAAUA,0EAKS8B,KAAKhC,UAAUiC,wBAA/BC,IAAAA,IAAKC,IAAAA,OAKP9B,GAFU+B,OAAOC,YAAcH,IACzBE,OAAOC,YAAcF,GAI3B7B,EAAS0B,KAAKjC,QAAQuC,MAAK,gBAAGrB,IAAAA,MAAOC,IAAAA,WAAUb,GAAkBY,GAASZ,GAAkBa,WAE3F,CAAEb,eAAAA,EAAgBC,OAAAA,mCAIP,WAAd0B,KAAK/B,MACPmC,OAAOG,iBAAiB,WAAUP,SAGlB,UAAdA,KAAK/B,YACFD,UAAUuC,iBAAiB,eAAcP,cACzChC,UAAUuC,iBAAiB,eAAcP,yCAK9B,WAAdA,KAAK/B,MACPmC,OAAOI,oBAAoB,WAAUR,SAGrB,UAAdA,KAAK/B,YACFD,UAAUwC,oBAAoB,eAAcR,cAC5ChC,UAAUwC,oBAAoB,eAAcR,yFAiG1CS,EAAS,SAAAvC,OACdwC,EAAW,IAAI5C,EAAoBI,UACzCwC,EAASzB,QAEFyB"}